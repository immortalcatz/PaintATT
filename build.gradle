buildscript {
    ext.kotlin_version = '1.1.1'
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}


apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'kotlin'
apply plugin: 'idea'

allprojects {
    tasks.withType(JavaCompile) {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

compileKotlin {
    kotlinOptions {
        javaParameters = true
        jvmTarget = 1.8
    }
}


version = "1.1"
group = "eladkay.paintatt"
archivesBaseName = "Paint All the Things"
 ext.corePlugin = "com.teamwizardry.librarianlib.asm.LibLibCorePlugin"

minecraft {
    useDepAts = true
    version = "1.12.2-14.23.1.2589"
    runDir = "run"
    mappings = "snapshot_20180114"

    replace 'GRADLE:BUILD', 1
    replace 'GRADLE:VERSION', 1

    replaceIn 'LibMisc.java'
    replaceIn 'LibMisc.kt'

    clientJvmArgs = ["-Dfml.c" +
                             "oreMods.load=$corePlugin"]
    serverJvmArgs = ["-Dfml.coreMods.load=$corePlugin"]
}

repositories {
    maven {
        url "http://maven.bluexin.be/repository/snapshots/"
    }
    maven {
        url "http://dvs1.progwml6.com/files/maven"
    }
    maven { url 'https://jitpack.io' }
    jcenter()
    maven {
        url "http://maven.shadowfacts.net/"
    }

}

dependencies {
    deobfCompile "mezz.jei:jei_1.12.2:4.8.0.108"
//    compile group: "net.shadowfacts", name: "Forgelin", version: "LATEST_VERSION"
    compile 'com.github.Shadowfacts:Forgelin:master-SNAPSHOT'

//    compile 'com.github.TeamWizardry:LibrarianLib:1.12-b2916a6c39-1'

    //compile "com.teamwizardry.librarianlib:librarianlib-1.12.2:4.3-SNAPSHOT:deobf"
}

def parseConfig(File config) {
    config.withReader {
        def prop = new Properties()
        prop.load(it)
        return (new ConfigSlurper().parse(prop))
    }
}

sourceSets { main.java.srcDirs += 'src/main/kotlin' }
idea {
    module {
        inheritOutputDirs = true
    }
    project {
        languageLevel = '1.8'
    }
}

processResources
        {
            // this will ensure that this task is redone when the versions change.
            inputs.property "version", project.version
            inputs.property "mcversion", project.minecraft.version

            // replace stuff in mcmod.info, nothing else
            from(sourceSets.main.resources.srcDirs) {
                include 'mcmod.info'

                // replace version and mcversion
                expand 'version': project.version, 'mcversion': project.minecraft.version
            }

            // copy everything else, thats not the mcmod.info
            from(sourceSets.main.resources.srcDirs) {
                exclude 'mcmod.info'
            }
        }